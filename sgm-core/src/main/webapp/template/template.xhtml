<!DOCTYPE html>
<html
    xmlns:h="http://xmlns.jcp.org/jsf/html" xmlns="http://www.w3.org/1999/xhtml"
    xmlns:f="http://xmlns.jcp.org/jsf/core"
    xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
    xmlns:p="http://primefaces.org/ui">
    <!--<f:metadata>-->
    <!--<f:event type="preRenderView" listener="# {userSession.redirectInvitado()}"/>-->
    <!--</f:metadata>-->

    <f:view contentType="text/html" locale="es" encoding="UTF-8"/>
    <f:event type="preRenderView" listener="#{userSession.redirectInvitado()}"/>
    <h:head>
        <f:facet name="first">
            <meta http-equiv="X-UA-Compatible" content="IE=edge" />
            <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
            <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0"/>
            <meta name="apple-mobile-web-app-capable" content="yes" />

            <link rel="shortcut icon" href="#{appConfig.urlbase}resources/images/favicon.ico"/>
            <link rel="apple-touch-icon" href="#{appConfig.urlbase}resources/images/icon57.png" sizes="57x57" />
            <link rel="apple-touch-icon" href="#{appConfig.urlbase}resources/images/icon72.png" sizes="72x72" />
            <link rel="apple-touch-icon" href="#{appConfig.urlbase}resources/images/icon76.png" sizes="76x76" />
            <link rel="apple-touch-icon" href="#{appConfig.urlbase}resources/images/icon114.png" sizes="114x114" />
            <link rel="apple-touch-icon" href="#{appConfig.urlbase}resources/images/icon120.png" sizes="120x120" />
            <link rel="apple-touch-icon" href="#{appConfig.urlbase}resources/images/icon144.png" sizes="144x144" />
            <link rel="apple-touch-icon" href="#{appConfig.urlbase}resources/images/icon152.png" sizes="152x152" />
        </f:facet>
        <title>Sistema de Gestion Municipal</title>
        <h:outputScript name="js/layout.js" library="sentinel-layout" />
        <!--<h:outputScript name="app.js" library="js" />-->
        <script src="#{appConfig.urlbase}resources/js/app.js"></script>
        <!--<script src="https://maps.google.com/maps/api/js?sensor=false" type="text/javascript"></script>-->
        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDVNHZI0LNAFFE3l1r2-05fuOwNqacZc4o" type="text/javascript"></script>
        <!--<script src="https://maps.googleapis.com/maps/api/js?sensor=false;key=AIzaSyAqLUhrgNoTLvy-r46UDdJYVa5GuepS9Fw" async="" defer="defer" type="text/javascript"></script>-->
        <!--<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDfTbyuXA7w0oyYopXWX7p1DSRybd4Sxps;libraries=places"></script>-->

<!--        <script type="text/javascript">
//Efecto corazones en el cursor
//diversas y variadas
// <![CDATA[
            var colours = new Array('#ff0000', '#ff0066', '#ff00ff', '#ff66ff', '#ff3399', '#ff99cc'); // colores de los corazones
            var minisize = 16; // tamaño corazones pequeños
            var maxisize = 28; // tamaño corazones grandes
            var hearts = 66; // número máxico de corazones en pantalla
            var over_or_under = "over";
            var x = ox = 400;
            var y = oy = 300;
            var swide = 800;
            var shigh = 600;
            var sleft = sdown = 0;
            var herz = new Array();
            var herzx = new Array();
            var herzy = new Array();
            var herzs = new Array();
            var kiss = false;

            if (typeof ('addRVLoadEvent') != 'function') function addRVLoadEvent(funky) {
                var oldonload = window.onload;
                if (typeof (oldonload) != 'function')
                    window.onload = funky;
                else
                    window.onload = function () {
                        if (oldonload)
                            oldonload();
                        funky();
                    }
            }

            addRVLoadEvent(mwah);

            function mwah() {
                if (document.getElementById) {
                    var i, heart;
                    for (i = 0; i < hearts; i++) {
                        heart = createDiv("auto", "auto");
                        heart.style.visibility = "hidden";
                        heart.style.zIndex = (over_or_under == "over") ? "1001" : "0";
                        heart.style.color = colours[i % colours.length];
                        heart.style.pointerEvents = "none";
                        if (navigator.appName == "Microsoft Internet Explorer")
                            heart.style.filter = "alpha(opacity=75)";
                        else
                            heart.style.opacity = 0.75;
                        heart.appendChild(document.createTextNode(String.fromCharCode(9829)));
                        document.body.appendChild(heart);
                        herz[i] = heart;
                        herzy[i] = false;
                    }
                    set_scroll();
                    set_width();
                    herzle();
                }
            }

            function herzle() {
                var c;
                if (Math.abs(x - ox) > 1 || Math.abs(y - oy) > 1) {
                    ox = x;
                    oy = y;
                    for (c = 0; c < hearts; c++)
                        if (herzy[c] === false) {
                            herz[c].firstChild.nodeValue = String.fromCharCode(9829);
                            herz[c].style.left = (herzx[c] = x - minisize / 2) + "px";
                            herz[c].style.top = (herzy[c] = y - minisize) + "px";
                            herz[c].style.fontSize = minisize + "px";
                            herz[c].style.fontWeight = 'normal';
                            herz[c].style.visibility = 'visible';
                            herzs[c] = minisize;
                            break;
                        }
                }
                for (c = 0; c < hearts; c++)
                    if (herzy[c] !== false)
                        blow_me_a_kiss(c);
                setTimeout("herzle()", 40);
            }

            document.onmousedown = pucker;
            document.onmouseup = function () {
                clearTimeout(kiss);
            };

            function pucker() {
                ox = -1;
                oy = -1;
                kiss = setTimeout('pucker()', 100);
            }

            function blow_me_a_kiss(i) {
                herzy[i] -= herzs[i] / minisize + i % 2;
                herzx[i] += (i % 5 - 2) / 5;
                if (herzy[i] < sdown - herzs[i] || herzx[i] < sleft - herzs[i] || herzx[i] > sleft + swide - herzs[i]) {
                    herz[i].style.visibility = "hidden";
                    herzy[i] = false;
                } else if (herzs[i] > minisize + 2 && Math.random() < .5 / hearts)
                    break_my_heart(i);
                else {
                    if (Math.random() < maxisize / herzy[i] && herzs[i] < maxisize)
                        herz[i].style.fontSize = (++herzs[i]) + "px";
                    herz[i].style.top = herzy[i] + "px";
                    herz[i].style.left = herzx[i] + "px";
                }
            }

            function break_my_heart(i) {
                var t;
                herz[i].firstChild.nodeValue = String.fromCharCode(9676);
                herz[i].style.fontWeight = 'bold';
                herzy[i] = false;
                for (t = herzs[i]; t <= maxisize; t++)
                    setTimeout('herz[' + i + '].style.fontSize="' + t + 'px"', 60 * (t - herzs[i]));
                setTimeout('herz[' + i + '].style.visibility="hidden";', 60 * (t - herzs[i]));
            }

            document.onmousemove = mouse;
            function mouse(e) {
                if (e) {
                    y = e.pageY;
                    x = e.pageX;
                } else {
                    set_scroll();
                    y = event.y + sdown;
                    x = event.x + sleft;
                }
            }

            window.onresize = set_width;
            function set_width() {
                var sw_min = 999999;
                var sh_min = 999999;
                if (document.documentElement && document.documentElement.clientWidth) {
                    if (document.documentElement.clientWidth > 0)
                        sw_min = document.documentElement.clientWidth;
                    if (document.documentElement.clientHeight > 0)
                        sh_min = document.documentElement.clientHeight;
                }
                if (typeof (self.innerWidth) == 'number' && self.innerWidth) {
                    if (self.innerWidth > 0 && self.innerWidth < sw_min)
                        sw_min = self.innerWidth;
                    if (self.innerHeight > 0 && self.innerHeight < sh_min)
                        sh_min = self.innerHeight;
                }
                if (document.body.clientWidth) {
                    if (document.body.clientWidth > 0 && document.body.clientWidth < sw_min)
                        sw_min = document.body.clientWidth;
                    if (document.body.clientHeight > 0 && document.body.clientHeight < sh_min)
                        sh_min = document.body.clientHeight;
                }
                if (sw_min == 999999 || sh_min == 999999) {
                    sw_min = 800;
                    sh_min = 600;
                }
                swide = sw_min;
                shigh = sh_min;
            }

            window.onscroll = set_scroll;
            function set_scroll() {
                if (typeof (self.pageYOffset) == 'number') {
                    sdown = self.pageYOffset;
                    sleft = self.pageXOffset;
                } else if (document.body && (document.body.scrollTop || document.body.scrollLeft)) {
                    sdown = document.body.scrollTop;
                    sleft = document.body.scrollLeft;
                } else if (document.documentElement && (document.documentElement.scrollTop || document.documentElement.scrollLeft)) {
                    sleft = document.documentElement.scrollLeft;
                    sdown = document.documentElement.scrollTop;
                } else {
                    sdown = 0;
                    sleft = 0;
                }
            }

            function createDiv(height, width) {
                var div = document.createElement("div");
                div.style.position = "absolute";
                div.style.height = height;
                div.style.width = width;
                div.style.overflow = "hidden";
                div.style.backgroundColor = "transparent";
                return (div);
            }
// ]]>
        </script>-->

        <ui:insert name="head" />
        <script src="#{appConfig.urlbase}resources/pfJs/columToggler.js"></script>
        <script type="text/javascript">
                    PrimeFaces.locales['en_US'] = {
                        closeText: 'Cerrar',
                        prevText: 'Anterior',
                        nextText: 'Siguiente',
                        monthNames: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
                        monthNamesShort: ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'],
                        dayNames: ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'],
                        dayNamesShort: ['Dom', 'Lun', 'Mar', 'Mie', 'Jue', 'Vie', 'Sab'],
                        dayNamesMin: ['D', 'L', 'M', 'X ', 'J', 'V ', 'S'],
                        weekHeader: 'Semana',
                        firstDay: 0,
                        isRTL: false,
                        showMonthAfterYear: false,
                        yearSuffix: '',
                        timeOnlyTitle: 'Solo hora',
                        timeText: 'Hora',
                        hourText: 'Hora',
                        minuteText: 'Minuto',
                        secondText: 'Segundo',
                        currentText: 'Fecha actual',
                        ampm: false,
                        month: 'Mes',
                        week: 'Semana',
                        day: 'Día',
                        allDayText: 'Día completo'
                    };

                    PrimeFaces.locales['es'] = {
                        closeText: 'Cerrar',
                        prevText: 'Anterior',
                        nextText: 'Siguiente',
                        monthNames: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
                        monthNamesShort: ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'],
                        dayNames: ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'],
                        dayNamesShort: ['Dom', 'Lun', 'Mar', 'Mie', 'Jue', 'Vie', 'Sab'],
                        dayNamesMin: ['D', 'L', 'M', 'X', 'J', 'V', 'S'],
                        weekHeader: 'Semana',
                        firstDay: 1,
                        isRTL: false,
                        showMonthAfterYear: false,
                        yearSuffix: '',
                        timeOnlyTitle: 'Sólo hora',
                        timeText: 'Tiempo',
                        hourText: 'Hora',
                        minuteText: 'Minuto',
                        secondText: 'Segundo',
                        currentText: 'Fecha actual',
                        ampm: false,
                        month: 'Mes',
                        week: 'Semana',
                        day: 'Día',
                        allDayText: 'Todo el día'
                    };
        </script>
        <script type="text/javascript">
            // Blue : #3E98D3  |  Red : #EF3F61  |  Green : #2BB673  |  Orange : #F15732
            //
            function skinChart() {
                this.cfg.shadow = false;
                this.cfg.title = '';
                this.cfg.seriesColors = ['#3E98D3', '#EF3F61', '#2BB673', '#F15732', '#5dd5de', '#f02480', '#9068be', '#6ed3cf'];
                this.cfg.grid = {
                    background: '#ffffff',
                    borderColor: '#ffffff',
                    gridLineColor: '#F5F5F5',
                    shadow: false
                };
                this.cfg.axesDefaults = {
                    rendererOptions: {
                        textColor: '#666F77'
                    }
                };
                this.cfg.seriesDefaults = {
                    shadow: false,
                    lineWidth: 1,
                    markerOptions: {
                        shadow: false,
                        size: 7,
                        style: 'circle'
                    }
                }
            }

            function skinBar() {
                this.cfg.shadow = false;
                this.cfg.title = '';
                this.cfg.seriesColors = ['#3E98D3', '#EF3F61', '#2BB673', '#F15732', '#5dd5de', '#f02480', '#9068be', '#6ed3cf'];
                this.cfg.grid = {
                    background: '#ffffff',
                    borderColor: '#ffffff',
                    gridLineColor: '#F5F5F5',
                    shadow: false
                };
                this.cfg.axesDefaults = {
                    rendererOptions: {
                        textColor: '#666F77'
                    }
                };
                this.cfg.seriesDefaults = {
                    shadow: false,
                    lineWidth: 1,
                    renderer: $.jqplot.BarRenderer,
                    markerOptions: {
                        shadow: false,
                        size: 7,
                        style: 'circle'
                    }
                }
            }

            function skinArea() {
                this.cfg.shadow = false;
                this.cfg.title = '';
                this.cfg.seriesColors = ['#EF3F61', '#2BB673'];
                this.cfg.grid = {
                    background: '#ffffff',
                    borderColor: '#ffffff',
                    gridLineColor: '#F5F5F5',
                    shadow: false
                };
                this.cfg.axesDefaults = {
                    rendererOptions: {
                        textColor: '#666F77'
                    }
                };
                this.cfg.seriesDefaults = {
                    shadow: false,
                    lineWidth: 1,
                    markerOptions: {
                        shadow: false,
                        size: 7,
                        style: 'circle'
                    }
                }
            }

            function skinBubble() {
                this.cfg.shadow = false;
                this.cfg.title = '';
                this.cfg.seriesColors = ['#2BB673', '#F15732'];
                this.cfg.grid = {
                    background: '#ffffff',
                    borderColor: '#ffffff',
                    gridLineColor: '#F5F5F5',
                    shadow: false
                };
                this.cfg.axesDefaults = {
                    rendererOptions: {
                        textColor: '#666F77'
                    }
                };
                this.cfg.seriesDefaults = {
                    shadow: false,
                    lineWidth: 1,
                    renderer: $.jqplot.BubbleRenderer,
                    markerOptions: {
                        shadow: false,
                        size: 7,
                        style: 'circle'
                    }
                }
            }

            function skinZoom() {
                this.cfg.shadow = false;
                this.cfg.title = '';
                this.cfg.seriesColors = ['#2BB673', '#F15732'];
                this.cfg.grid = {
                    background: '#ffffff',
                    borderColor: '#ffffff',
                    gridLineColor: '#F5F5F5',
                    shadow: false
                };
                this.cfg.axesDefaults = {
                    rendererOptions: {
                        textColor: '#666F77'
                    }
                };
                this.cfg.seriesDefaults = {
                    shadow: false,
                    lineWidth: 1,
                    markerOptions: {
                        shadow: false,
                        size: 7,
                        style: 'circle'
                    }
                }
            }
            //
            function skinPie() {
                this.cfg.shadow = false;
                this.cfg.title = '';
                this.cfg.seriesColors = ['#3E98D3', '#EF3F61', '#2BB673', '#F15732'];
                //this.cfg.seriesColors = ['#69D2E7', '#DD6161', '#D8DEC3','#CDC1CF','#A7DBD8','#83AF9B','#D68189'];
                this.cfg.grid = {
                    background: '#ffffff',
                    borderColor: '#ffffff',
                    gridLineColor: '#F5F5F5',
                    color: '#000000',
                    shadow: false
                };
                this.cfg.axesDefaults = {
                    rendererOptions: {
                        textColor: '#666F77',
                    }
                };
                this.cfg.seriesDefaults = {
                    renderer: $.jqplot.PieRenderer,
                    shadow: false,
                    lineWidth: 1,
                    markerOptions: {
                        shadow: false,
                        size: 7,
                        style: 'circle'
                    }
                }
            }

            function skinDonut() {
                this.cfg.shadow = false;
                this.cfg.title = '';
                this.cfg.seriesColors = ['#3E98D3', '#EF3F61', '#2BB673', '#F15732'];
                this.cfg.grid = {
                    background: '#ffffff',
                    borderColor: '#ffffff',
                    gridLineColor: '#F5F5F5',
                    shadow: false
                };
                this.cfg.axesDefaults = {
                    rendererOptions: {
                        textColor: '#666F77',
                    }
                };
                this.cfg.seriesDefaults = {
                    renderer: $.jqplot.DonutRenderer,
                    shadow: false,
                    lineWidth: 1,
                    markerOptions: {
                        shadow: false,
                        size: 7,
                        style: 'circle'
                    }
                }
            }

            function skinBarAndLine() {
                this.cfg.shadow = false;
                this.cfg.title = '';
                this.cfg.seriesColors = ['#3E98D3', '#EF3F61'];
                this.cfg.grid = {
                    background: '#ffffff',
                    borderColor: '#ffffff',
                    gridLineColor: '#F5F5F5',
                    shadow: false
                };
                this.cfg.axesDefaults = {
                    rendererOptions: {
                        textColor: '#666F77'
                    }
                };
                this.cfg.seriesDefaults = {
                    shadow: false,
                    lineWidth: 5,
                    renderer: $.jqplot.BarRenderer,
                    markerOptions: {
                        shadow: false,
                        size: 7,
                        style: 'circle'
                    }
                }
            }

            function skinMeterGauge() {
                this.cfg.title = '';
                this.cfg.seriesDefaults = {
                    shadow: false,
                    lineWidth: 5,
                    renderer: $.jqplot.MeterGaugeRenderer,
                    rendererOptions: {
                        shadow: false,
                        min: 100,
                        max: 800,
                        intervals: [200, 300, 400, 500, 600, 700, 800],
                        intervalColors: ['#3E98D3', '#EF3F61', '#2BB673', '#F15732', '#3E98D3', '#EF3F61', '#2BB673']
                    }
                }
            }

            function skinMultiAxis() {
                this.cfg.shadow = false;
                this.cfg.title = '';
                this.cfg.seriesColors = ['#2BB673', '#F15732'];
                this.cfg.grid = {
                    background: '#ffffff',
                    borderColor: '#ffffff',
                    gridLineColor: '#F5F5F5',
                    shadow: false
                };
                this.cfg.axesDefaults = {
                    rendererOptions: {
                        textColor: '#666F77'
                    }
                };
                this.cfg.seriesDefaults = {
                    shadow: false,
                    lineWidth: 1,
                    renderer: $.jqplot.BarRenderer,
                    markerOptions: {
                        shadow: false,
                        size: 7,
                        style: 'circle'
                    }
                }
            }
        </script>
        <style type="text/css">
            .jqplot-target, .jqplot-axis {
                color: #0F0F10;
            }
            .ui-panel .ui-panel-title {
                color: white !important;
            }
        </style>
    </h:head>

    <h:body>
        <ui:include src="topbar.xhtml" />

        <ui:include src="leftmenu.xhtml" />

        <p:growl autoUpdate="true" globalOnly="true" showDetail="true" />
        <p:confirmDialog global="true" showEffect="fade" hideEffect="fade">
            <center>
                <p:commandButton value="Si" type="button" styleClass="ui-confirmdialog-yes btnStyle" icon="ui-icon-check" />
                <p:commandButton value="No" type="button" styleClass="ui-confirmdialog-no btnStyle" icon="ui-icon-close" />
            </center>
        </p:confirmDialog>

        <div id="layout-portlets-cover" class="fontRegular">

            <ui:insert name="content">
                Template
            </ui:insert>
            <!--            <div align="center">
                            <p:outputPanel>
                                <h:outputText value="ICL SOLUCIONES S.A." style="font-weight: bolder;font-size: small">
                                </h:outputText>
                                <br/>
                                <h:outputText value="Todos los derechos reservados para ICL  SOLUCIONES S.A." style="font-weight: bolder;font-size: small"/>
                                <br/>
                            </p:outputPanel>


                        </div>-->
        </div>

        <!--<p:ajaxStatus style="width:32px; height:32px; position:fixed; right:12px; bottom:10px">
            <f:facet name="start">
                <p:graphicImage name="images/preloader.gif" library="sentinel-layout"/>
            </f:facet>

            <f:facet name="complete">
                <h:outputText value="" />
            </f:facet>
        </p:ajaxStatus>-->
        <p:ajaxStatus id="status" onstart="PF('dlgStatus').show()" oncomplete="PF('dlgStatus').hide()"/>

        <p:dialog id="dlgStatus" widgetVar="dlgStatus" modal="true" draggable="false"  closable="false" resizable="false" showHeader="false">
            <p:graphicImage name="images/preloader.gif" library="sentinel-layout"/>
        </p:dialog>
        <h:outputStylesheet name="css/font-icon-layout.css" library="sentinel-layout" />
        <h:outputStylesheet name="css/sentinel-layout.css" library="sentinel-layout" />
        <h:outputStylesheet name="css/core-layout.css" library="sentinel-layout" />
        <style type="text/css">
            .ui-panel .ui-panel-title{color: white !important; }
        </style>
    </h:body>

</html>