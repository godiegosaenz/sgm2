



CREATE OR REPLACE FUNCTION censocat.update_servicios_json()
  RETURNS void AS
$BODY$
DECLARE ASEO BOOLEAN;
DECLARE TRANSPORTE BOOLEAN;
DECLARE RECOLECCION BOOLEAN;
DECLARE
	C_SERVICIOS CURSOR FOR 
			SELECT PRE.ID AS PREDIO, 
			(dato_act::JSON->'dataSolar'->'servicios'->'otrosServicios'->'aseoCalles')::TEXT AS ASEOCALLES,
			(dato_act::JSON->'dataSolar'->'servicios'->'otrosServicios'->'transportePublico')::TEXT AS tpublico,
			(dato_act::JSON->'dataSolar'->'servicios'->'otrosServicios'->'recoleccionBasura')::TEXT AS recoleccion_basura
			FROM CENSOCAT.ORDEN_DET ORD INNER JOIN SGM_APP.CAT_PREDIO PRE ON PRE.ID = ORD.NUM_PREDIO ;
	
BEGIN
	FOR C IN C_SERVICIOS LOOP

			IF (C.ASEOCALLES = NULL ) THEN ASEO = FALSE; ELSE ASEO = C.ASEOCALLES; END IF;
			IF (C.tpublico = NULL ) THEN TRANSPORTE = FALSE; ELSE TRANSPORTE = C.tpublico; END IF;
			IF (C.recoleccion_basura = NULL ) THEN RECOLECCION = FALSE; ELSE RECOLECCION = C.recoleccion_basura; END IF;

			UPDATE SGM_APP.CAT_PREDIO_S6  SET TPUBLICO = TRANSPORTE, ASEO_CALLES = ASEO, RECOLECCION_BASURA =  RECOLECCION WHERE PREDIO = C.PREDIO;
					
	END LOOP;
	
END;

$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION censocat.update_servicios_json()
  OWNER TO sisapp;


SELECT censocat.update_servicios_json();


UPDATE SGM_APP.CAT_PREDIO_S6  SET TPUBLICO = FALSE WHERE TPUBLICO IS NULL;
UPDATE SGM_APP.CAT_PREDIO_S6  SET ASEO_CALLES = FALSE WHERE ASEO_CALLES IS NULL;
UPDATE SGM_APP.CAT_PREDIO_S6  SET RECOLECCION_BASURA = FALSE WHERE RECOLECCION_BASURA IS NULL;