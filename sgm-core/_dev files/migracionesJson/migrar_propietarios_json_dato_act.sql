
SELECT COUNT (*) FROM SGM_APP.CAT_PREDIO_PROPIETARIO;

drop type ente;
drop table temp;

drop type ente;
create type ente as (campo1 text, campo2 text, campo3 text, 
correo text, discapacidad text, estadoCivil text, 
"idNacional" boolean, nacionalidad text, numid text, pais text, telefono text, "tipoPersona" int);


SELECT  num_predio AS  predio, (dato_act::JSON->'tenencia'->'propietario')::JSON AS PROPIETARIO INTO TEMP  FROM CENSOCAT.ORDEN_DET;

SELECT predio, j.* INTO CAT_ENTE  FROM TEMP, json_populate_recordset(null::ente, PROPIETARIO) as j;

SELECT  DISTINCT "tipoPersona"  FROM  CAT_ENTE;

DROP TABLE CAT_ENTE;

UPDATE CAT_ENTE SET CAMPO3 = NULL WHERE LENGTH(CAMPO3)>10 like  '%0%';

select * from CAT_ENTE where numid = '0910106426';

DELETE FROM CAT_ENTE_PROPE;

SELECT censocat.propietarios_json_dato_act() ;


CREATE OR REPLACE FUNCTION censocat.propietarios_json_dato_act();
  RETURNS void AS
$BODY$
DECLARE PREDIOID BIGINT;
DECLARE FEC_NAC TIMESTAMP;
DECLARE IDENTE BIGINT;
DECLARE TPERSONA BOOLEAN;
DECLARE SECUENCIAMAX BIGINT;
DECLARE
	C_ENTE CURSOR FOR 
			SELECT predio as pred, numid as IDENTIFICACION ,campo1 AS nombres, campo2 AS apellidos, campo3 as fecha_nacimiento, correo, nacionalidad, "tipoPersona" as tipo, telefono
			FROM CAT_ENTE ENT INNER JOIN SGM_APP.CAT_PREDIO PRE ON PRE.NUM_PREDIO = ENT.PREDIO  WHERE  (campo1 != 'null'  and campo2 != 'null') AND (campo1 != ''  and campo2 != '') ;
BEGIN		
	FOR C IN C_ENTE LOOP
		FEC_NAC = NULL;
		PREDIOID = (SELECT ID FROM SGM_APP.CAT_PREDIO WHERE NUM_PREDIO = C.PRED);
		IF (C.fecha_nacimiento != 'null' or C.fecha_nacimiento != '') THEN FEC_NAC = to_date(C.fecha_nacimiento, 'DD MM YYYY'); END IF;
		IF (C.tipo = 1) THEN TPERSONA = TRUE; END IF; IF (C.tipo = 2) THEN TPERSONA = FALSE; END IF ; 

				

		IF ((SELECT COUNT(CI_RUC) FROM SGM_APP.CAT_ENTE E WHERE CI_RUC = C.IDENTIFICACION)=1) THEN
			SECUENCIAMAX = (SELECT MAX(SECUENCIA) FROM SGM_SECUENCIAS.ENTE_SECUENCIA);

			IF (SECUENCIAMAX IS NULL) THEN 
				SECUENCIAMAX := 300000000000001;
			ELSE 
				SECUENCIAMAX := SECUENCIAMAX + 1;
			END IF;

			

			IF (TPERSONA = TRUE) THEN 
				IF ((SELECT COUNT (ID) FROM SGM_APP.CAT_ENTE WHERE NOMBRES = C.NOMBRES AND APELLIDOS = C.APELLIDOS)=0) THEN

					INSERT INTO SGM_SECUENCIAS.ENTE_SECUENCIA(anio, secuencia) VALUES ((select extract(year from now())), SECUENCIAMAX);
					
					INSERT INTO SGM_APP.CAT_ENTE (ID,CI_RUC, NOMBRES, APELLIDOS, ES_PERSONA, ESTADO, FECHA_CRE, COD_USUARIO, EXCEPCIONALES, FECHA_NACIMIENTO)
					VALUES (DEFAULT, SECUENCIAMAX, C.NOMBRES,C.APELLIDOS, TPERSONA, 'A', NOW(), 6, TRUE, FEC_NAC ) 
					RETURNING ID INTO IDENTE;
					
					
					INSERT INTO SGM_APP.CAT_PREDIO_PROPIETARIO (ID,PREDIO,ENTE, ESTADO)
					VALUES(DEFAULT, PREDIOID, IDENTE, 'A');	

					ELSE 	
						IDENTE = (SELECT ID FROM SGM_APP.CAT_ENTE WHERE CI_RUC = C.IDENTIFICACION);
						INSERT INTO SGM_APP.CAT_PREDIO_PROPIETARIO (ID,PREDIO,ENTE, ESTADO)
						VALUES(DEFAULT, PREDIOID, IDENTE, 'A');	
				END IF;
			END IF;

			IF (TPERSONA = FALSE) THEN 
			IF ((SELECT COUNT (ID) FROM SGM_APP.CAT_ENTE WHERE RAZON_SOCIAL = C.NOMBRES AND NOMBRE_COMERCIAL = C.APELLIDOS)=0) THEN
			
				INSERT INTO SGM_SECUENCIAS.ENTE_SECUENCIA(anio, secuencia) VALUES ((select extract(year from now())), SECUENCIAMAX); 

				INSERT INTO SGM_APP.CAT_ENTE (ID,CI_RUC, RAZON_SOCIAL, NOMBRE_COMERCIAL, ES_PERSONA, ESTADO, FECHA_CRE, COD_USUARIO, EXCEPCIONALES, FECHA_NACIMIENTO)
				VALUES (DEFAULT, SECUENCIAMAX, C.NOMBRES,C.APELLIDOS, TPERSONA, 'A', NOW(), 6, TRUE ,FEC_NAC)
				RETURNING ID INTO IDENTE;
				
				
				INSERT INTO SGM_APP.CAT_PREDIO_PROPIETARIO (ID,PREDIO,ENTE, ESTADO)
				VALUES(DEFAULT, PREDIOID, IDENTE, 'A');	
				
				ELSE 
						IDENTE = (SELECT ID FROM SGM_APP.CAT_ENTE WHERE CI_RUC = C.IDENTIFICACION);
						INSERT INTO SGM_APP.CAT_PREDIO_PROPIETARIO (ID,PREDIO,ENTE, ESTADO)
						VALUES(DEFAULT, PREDIOID, IDENTE, 'A');	
				END IF;
			END IF;
		
		END IF;
		
		IF((SELECT COUNT(CI_RUC) FROM SGM_APP.CAT_ENTE E WHERE CI_RUC = C.IDENTIFICACION)=0) THEN 
		
			IF (TPERSONA = TRUE) THEN 
				IF ((SELECT COUNT (ID) FROM SGM_APP.CAT_ENTE WHERE NOMBRES = C.NOMBRES AND APELLIDOS = C.APELLIDOS)=0) THEN
					INSERT INTO SGM_APP.CAT_ENTE (ID,CI_RUC, NOMBRES, APELLIDOS, ES_PERSONA, ESTADO, FECHA_CRE, COD_USUARIO, FECHA_NACIMIENTO)
					VALUES (DEFAULT, C.IDENTIFICACION, C.NOMBRES,C.APELLIDOS, TPERSONA, 'A', NOW(), 6, FEC_NAC) RETURNING  ID INTO IDENTE;
					
					INSERT INTO SGM_APP.CAT_PREDIO_PROPIETARIO (ID,PREDIO,ENTE, ESTADO)
					VALUES(DEFAULT, PREDIOID, IDENTE, 'A');	
						
				END IF;
				
			END IF;
			IF (TPERSONA = FALSE) THEN 
				IF ((SELECT COUNT (ID) FROM SGM_APP.CAT_ENTE WHERE RAZON_SOCIAL = C.NOMBRES AND NOMBRE_COMERCIAL = C.APELLIDOS)=0) THEN
					
					
					INSERT INTO SGM_APP.CAT_ENTE (ID,CI_RUC, NOMBRES, APELLIDOS, ES_PERSONA, ESTADO, FECHA_CRE, COD_USUARIO, EXCEPCIONALES, FECHA_NACIMIENTO)
					VALUES (DEFAULT, C.IDENTIFICACION, C.NOMBRES,C.APELLIDOS, TPERSONA, 'A', NOW(), 6, TRUE, FEC_NAC ) 
					RETURNING ID INTO IDENTE;
					
					
					INSERT INTO SGM_APP.CAT_PREDIO_PROPIETARIO (ID,PREDIO,ENTE, ESTADO)
					VALUES(DEFAULT, PREDIOID, IDENTE, 'A');	

					ELSE 
						IDENTE = (SELECT ID FROM SGM_APP.CAT_ENTE WHERE CI_RUC = C.IDENTIFICACION);
						INSERT INTO SGM_APP.CAT_PREDIO_PROPIETARIO (ID,PREDIO,ENTE, ESTADO)
						VALUES(DEFAULT, PREDIOID, IDENTE, 'A');	
				END IF;	
			END IF;
		END IF;
	END LOOP;
END;

$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION censocat.propietarios_json_dato_act()
  OWNER TO sisapp;







