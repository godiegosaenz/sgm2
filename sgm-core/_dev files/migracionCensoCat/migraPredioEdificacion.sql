-- Function: censocat.migrar_predios_edificacion_censo_sgm()

-- DROP FUNCTION censocat.migrar_predios_edificacion_censo_sgm();

CREATE OR REPLACE FUNCTION censocat.migrar_predios_edificacion_censo_sgm()
  RETURNS void AS
$BODY$

DECLARE
	C_PREDIOS CURSOR FOR 
		SELECT ID, PREDIO, NUM_BLOQUES, SEC_BLOQUE, NUM_EDIF, NUM_PISOS,AREA_CONS, PORC_CONS,CONDICION,ESTADO_EDIF,ANO_FIN_CONS, RENTADO, ESTADO
		FROM CENSOCAT.PREDIO_EDIFICACION P;
	ACIERTOS INTEGER := 0;
	PORC BOOLEAN := FALSE;
	FORMA CHARACTER VARYING(1);
	ID_EDIF BIGINT;
BEGIN
	FOR C IN C_PREDIOS LOOP
	        SELECT ID INTO ID_EDIF FROM SGM_APP.CAT_PREDIO_EDIFICACION WHERE PREDIO = C.PREDIO AND NO_EDIFICACION = C.SEC_BLOQUE;
		IF(ID_EDIF IS NOT NULL) THEN 
			UPDATE SGM_APP.CAT_PREDIO_EDIFICACION SET NUM_PISOS=C.NUM_PISOS, AREA_CONS_CENSO=C.AREA_CONS,ANIO_CONS=C.ANO_FIN_CONS WHERE ID=ID_EDIF;
		ELSE 
			INSERT INTO SGM_APP.CAT_PREDIO_EDIFICACION(ID,PREDIO,NO_EDIFICACION,NUM_PISOS,AREA_CONS_CENSO,ANIO_CONS,EN_CONSTRUCCION_PORC, ESTA_RENTADO, ESTADO, ESTADO_CONSERVACION)
			VALUES (C.ID, C.PREDIO, C.SEC_BLOQUE, C.NUM_PISOS, C.AREA_CONS,C.ANO_FIN_CONS,C.PORC_CONS,C.RENTADO,TRUE,C.ESTADO_EDIF);
			ACIERTOS := ACIERTOS +1;
		END IF;	
	END LOOP;
	RAISE NOTICE 'EDIFICACIONES CREADAS %',ACIERTOS;
	ACIERTOS := 0;
END;

$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION censocat.migrar_predios_edificacion_censo_sgm()
  OWNER TO sisapp;

-- SE EXCLUYO EL PREDIO 392 PORQUE NO TIENE NUMERO DE ORDER 
-- SELECT censocat.migrar_predios_edificacion_censo_sgm()
-- DELETE FROM APP1.CAT_PREDIO
-- truncate table app1.CTLG_CATALOGO restart identity cascade;

--SELECT * FROM APP1.CAT_PREDIO_EDIFICACION T LIMIT 10
-- SELECT COUNT(*) FROM CENSOCAT.PREDIO_EDIFICACION -- 4174
-- SELECT COUNT(*) FROM APP1.CAT_PREDIO_EDIFICACION -- 4148 
--SELECT * FROM CENSOCAT.PREDIO_EDIFICACION LIMIT 10;

--SELECT * FROM CENSOCAT.PREDIO_EDIFICACION ORDER BY PREDIO, SEC_BLOQUE LIMIT 10;-- 947
--SELECT * FROM CENSOCAT.PREDIO_EDIFICACION WHERE PREDIO=947 ORDER BY PREDIO, SEC_BLOQUE




